{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/khapuhetti/Desktop/sqlProject/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/khapuhetti/Desktop/sqlProject\",\"filename\":\"/Users/khapuhetti/Desktop/sqlProject/test/users.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/khapuhetti/Desktop/sqlProject\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/khapuhetti/Desktop/sqlProject/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/khapuhetti/Desktop/sqlProject",
      "filename": "/Users/khapuhetti/Desktop/sqlProject/test/users.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/khapuhetti/Desktop/sqlProject",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/khapuhetti/Desktop/sqlProject/test/users.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/khapuhetti/Desktop/sqlProject/test/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/khapuhetti/Desktop/sqlProject/test/",
        "sourceFileName": "users.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _supertest = _interopRequireDefault(require(\"supertest\"));\n\nvar _chai = require(\"chai\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar request = (0, _supertest[\"default\"])(\"https://gorest.co.in/public-api/\");\nvar TOKEN = \"4e5a7688d35bd35d3a1748336915f162a78fd8ce2b39bcf74f07f3fe78c11feb\";\ndescribe(\"Users\", function () {\n  it(\"Status health check\", function () {\n    return request.get(\"users?access-token=\".concat(TOKEN)).then(function (res) {\n      (0, _chai.expect)(res.status).equal(200);\n    });\n  });\n  it(\"Verify not empty\", function () {\n    return request.get(\"users?access-token=\".concat(TOKEN)).then(function (res) {\n      (0, _chai.expect)(res.body.data).to.not.be.empty;\n    });\n  });\n  it(\"GET /users with query params\", function () {\n    var url = \"users?access-token=\".concat(TOKEN, \"&page=5&gender=Female&status=Active\");\n    return request.get(url).then(function (res) {\n      (0, _chai.expect)(res.body.data).to.not.be.empty;\n      res.body.data.forEach(function (data) {\n        (0, _chai.expect)(data.gender).to.eq(\"Male\");\n        (0, _chai.expect)(data.status).to.eq(\"Active\");\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInJlcXVlc3QiLCJUT0tFTiIsImRlc2NyaWJlIiwiaXQiLCJnZXQiLCJ0aGVuIiwicmVzIiwic3RhdHVzIiwiZXF1YWwiLCJib2R5IiwiZGF0YSIsInRvIiwibm90IiwiYmUiLCJlbXB0eSIsInVybCIsImZvckVhY2giLCJnZW5kZXIiLCJlcSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFHQTs7OztBQUZBLElBQU1BLE9BQU8sR0FBRywyQkFBVSxrQ0FBVixDQUFoQjtBQUlBLElBQU1DLEtBQUssR0FDVCxrRUFERjtBQUdBQyxRQUFRLENBQUMsT0FBRCxFQUFVLFlBQU07QUFDdEJDLEVBQUFBLEVBQUUsQ0FBQyxxQkFBRCxFQUF3QixZQUFNO0FBQzlCLFdBQU9ILE9BQU8sQ0FBQ0ksR0FBUiw4QkFBa0NILEtBQWxDLEdBQTJDSSxJQUEzQyxDQUFnRCxVQUFDQyxHQUFELEVBQVM7QUFDOUQsd0JBQU9BLEdBQUcsQ0FBQ0MsTUFBWCxFQUFtQkMsS0FBbkIsQ0FBeUIsR0FBekI7QUFDRCxLQUZNLENBQVA7QUFHRCxHQUpDLENBQUY7QUFNQUwsRUFBQUEsRUFBRSxDQUFDLGtCQUFELEVBQXFCLFlBQU07QUFDM0IsV0FBT0gsT0FBTyxDQUFDSSxHQUFSLDhCQUFrQ0gsS0FBbEMsR0FBMkNJLElBQTNDLENBQWdELFVBQUNDLEdBQUQsRUFBUztBQUM5RCx3QkFBT0EsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQWhCLEVBQXNCQyxFQUF0QixDQUF5QkMsR0FBekIsQ0FBNkJDLEVBQTdCLENBQWdDQyxLQUFoQztBQUNELEtBRk0sQ0FBUDtBQUdELEdBSkMsQ0FBRjtBQU1BWCxFQUFBQSxFQUFFLENBQUMsOEJBQUQsRUFBaUMsWUFBTTtBQUN2QyxRQUFNWSxHQUFHLGdDQUF5QmQsS0FBekIsd0NBQVQ7QUFFQSxXQUFPRCxPQUFPLENBQUNJLEdBQVIsQ0FBWVcsR0FBWixFQUFpQlYsSUFBakIsQ0FBc0IsVUFBQ0MsR0FBRCxFQUFTO0FBQ3BDLHdCQUFPQSxHQUFHLENBQUNHLElBQUosQ0FBU0MsSUFBaEIsRUFBc0JDLEVBQXRCLENBQXlCQyxHQUF6QixDQUE2QkMsRUFBN0IsQ0FBZ0NDLEtBQWhDO0FBQ0FSLE1BQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxJQUFULENBQWNNLE9BQWQsQ0FBc0IsVUFBQ04sSUFBRCxFQUFVO0FBQzlCLDBCQUFPQSxJQUFJLENBQUNPLE1BQVosRUFBb0JOLEVBQXBCLENBQXVCTyxFQUF2QixDQUEwQixNQUExQjtBQUNBLDBCQUFPUixJQUFJLENBQUNILE1BQVosRUFBb0JJLEVBQXBCLENBQXVCTyxFQUF2QixDQUEwQixRQUExQjtBQUNELE9BSEQ7QUFJRCxLQU5NLENBQVA7QUFPRCxHQVZDLENBQUY7QUFXRCxDQXhCTyxDQUFSIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9raGFwdWhldHRpL0Rlc2t0b3Avc3FsUHJvamVjdC90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdXBlcnRlc3QgZnJvbSBcInN1cGVydGVzdFwiO1xuY29uc3QgcmVxdWVzdCA9IHN1cGVydGVzdChcImh0dHBzOi8vZ29yZXN0LmNvLmluL3B1YmxpYy1hcGkvXCIpO1xuXG5pbXBvcnQgeyBleHBlY3QgfSBmcm9tIFwiY2hhaVwiO1xuXG5jb25zdCBUT0tFTiA9XG4gIFwiNGU1YTc2ODhkMzViZDM1ZDNhMTc0ODMzNjkxNWYxNjJhNzhmZDhjZTJiMzliY2Y3NGYwN2YzZmU3OGMxMWZlYlwiO1xuXG5kZXNjcmliZShcIlVzZXJzXCIsICgpID0+IHtcbiAgaXQoXCJTdGF0dXMgaGVhbHRoIGNoZWNrXCIsICgpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoYHVzZXJzP2FjY2Vzcy10b2tlbj0ke1RPS0VOfWApLnRoZW4oKHJlcykgPT4ge1xuICAgICAgZXhwZWN0KHJlcy5zdGF0dXMpLmVxdWFsKDIwMCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0KFwiVmVyaWZ5IG5vdCBlbXB0eVwiLCAoKSA9PiB7XG4gICAgcmV0dXJuIHJlcXVlc3QuZ2V0KGB1c2Vycz9hY2Nlc3MtdG9rZW49JHtUT0tFTn1gKS50aGVuKChyZXMpID0+IHtcbiAgICAgIGV4cGVjdChyZXMuYm9keS5kYXRhKS50by5ub3QuYmUuZW1wdHk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0KFwiR0VUIC91c2VycyB3aXRoIHF1ZXJ5IHBhcmFtc1wiLCAoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gYHVzZXJzP2FjY2Vzcy10b2tlbj0ke1RPS0VOfSZwYWdlPTUmZ2VuZGVyPUZlbWFsZSZzdGF0dXM9QWN0aXZlYDtcblxuICAgIHJldHVybiByZXF1ZXN0LmdldCh1cmwpLnRoZW4oKHJlcykgPT4ge1xuICAgICAgZXhwZWN0KHJlcy5ib2R5LmRhdGEpLnRvLm5vdC5iZS5lbXB0eTtcbiAgICAgIHJlcy5ib2R5LmRhdGEuZm9yRWFjaCgoZGF0YSkgPT4ge1xuICAgICAgICBleHBlY3QoZGF0YS5nZW5kZXIpLnRvLmVxKFwiTWFsZVwiKTtcbiAgICAgICAgZXhwZWN0KGRhdGEuc3RhdHVzKS50by5lcShcIkFjdGl2ZVwiKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "request",
        "TOKEN",
        "describe",
        "it",
        "get",
        "then",
        "res",
        "status",
        "equal",
        "body",
        "data",
        "to",
        "not",
        "be",
        "empty",
        "url",
        "forEach",
        "gender",
        "eq"
      ],
      "mappings": ";;AAAA;;AAGA;;;;AAFA,IAAMA,OAAO,GAAG,2BAAU,kCAAV,CAAhB;AAIA,IAAMC,KAAK,GACT,kEADF;AAGAC,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtBC,EAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAC9B,WAAOH,OAAO,CAACI,GAAR,8BAAkCH,KAAlC,GAA2CI,IAA3C,CAAgD,UAACC,GAAD,EAAS;AAC9D,wBAAOA,GAAG,CAACC,MAAX,EAAmBC,KAAnB,CAAyB,GAAzB;AACD,KAFM,CAAP;AAGD,GAJC,CAAF;AAMAL,EAAAA,EAAE,CAAC,kBAAD,EAAqB,YAAM;AAC3B,WAAOH,OAAO,CAACI,GAAR,8BAAkCH,KAAlC,GAA2CI,IAA3C,CAAgD,UAACC,GAAD,EAAS;AAC9D,wBAAOA,GAAG,CAACG,IAAJ,CAASC,IAAhB,EAAsBC,EAAtB,CAAyBC,GAAzB,CAA6BC,EAA7B,CAAgCC,KAAhC;AACD,KAFM,CAAP;AAGD,GAJC,CAAF;AAMAX,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvC,QAAMY,GAAG,gCAAyBd,KAAzB,wCAAT;AAEA,WAAOD,OAAO,CAACI,GAAR,CAAYW,GAAZ,EAAiBV,IAAjB,CAAsB,UAACC,GAAD,EAAS;AACpC,wBAAOA,GAAG,CAACG,IAAJ,CAASC,IAAhB,EAAsBC,EAAtB,CAAyBC,GAAzB,CAA6BC,EAA7B,CAAgCC,KAAhC;AACAR,MAAAA,GAAG,CAACG,IAAJ,CAASC,IAAT,CAAcM,OAAd,CAAsB,UAACN,IAAD,EAAU;AAC9B,0BAAOA,IAAI,CAACO,MAAZ,EAAoBN,EAApB,CAAuBO,EAAvB,CAA0B,MAA1B;AACA,0BAAOR,IAAI,CAACH,MAAZ,EAAoBI,EAApB,CAAuBO,EAAvB,CAA0B,QAA1B;AACD,OAHD;AAID,KANM,CAAP;AAOD,GAVC,CAAF;AAWD,CAxBO,CAAR",
      "sourceRoot": "/Users/khapuhetti/Desktop/sqlProject/test/",
      "sourcesContent": [
        "import supertest from \"supertest\";\nconst request = supertest(\"https://gorest.co.in/public-api/\");\n\nimport { expect } from \"chai\";\n\nconst TOKEN =\n  \"4e5a7688d35bd35d3a1748336915f162a78fd8ce2b39bcf74f07f3fe78c11feb\";\n\ndescribe(\"Users\", () => {\n  it(\"Status health check\", () => {\n    return request.get(`users?access-token=${TOKEN}`).then((res) => {\n      expect(res.status).equal(200);\n    });\n  });\n\n  it(\"Verify not empty\", () => {\n    return request.get(`users?access-token=${TOKEN}`).then((res) => {\n      expect(res.body.data).to.not.be.empty;\n    });\n  });\n\n  it(\"GET /users with query params\", () => {\n    const url = `users?access-token=${TOKEN}&page=5&gender=Female&status=Active`;\n\n    return request.get(url).then((res) => {\n      expect(res.body.data).to.not.be.empty;\n      res.body.data.forEach((data) => {\n        expect(data.gender).to.eq(\"Male\");\n        expect(data.status).to.eq(\"Active\");\n      });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622574563025
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/khapuhetti/Desktop/sqlProject/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/khapuhetti/Desktop/sqlProject\",\"filename\":\"/Users/khapuhetti/Desktop/sqlProject/test/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/khapuhetti/Desktop/sqlProject\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/khapuhetti/Desktop/sqlProject/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/khapuhetti/Desktop/sqlProject",
      "filename": "/Users/khapuhetti/Desktop/sqlProject/test/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/khapuhetti/Desktop/sqlProject",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/khapuhetti/Desktop/sqlProject/test/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/khapuhetti/Desktop/sqlProject/test/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/khapuhetti/Desktop/sqlProject/test/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _supertest = _interopRequireDefault(require(\"supertest\"));\n\nvar _chai = require(\"chai\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar request = (0, _supertest[\"default\"])(\"https://gorest.co.in/public-api/\");\n\nvar mysql = require(\"mysql2\"); // const express = require(\"express\");\n// const bodyParser = require(\"body-Parser\");\n// var app = express();\n// app.use(bodyParser.json());\n\n\nvar mysqlConnection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"password\",\n  database: \"kasundb\" // socketPath: \"/tmp/mysql.sock\",\n  // multipleStatements: true,\n\n});\nmysqlConnection.connect(function (err) {\n  if (!err) {\n    console.log(\"Connected\");\n  } else {\n    console.log(\"error: \".concat(JSON.stringify(err, null, 4)));\n    console.log(\"Connection Failed\");\n  }\n}); //insert a record\n\ndescribe(\"DB testing\", function () {\n  it(\"Inserting a product name\", function () {\n    var products = {\n      product_name: \"ipadairthkhfh5\"\n    };\n    var query = \"INSERT INTO products SET ?\";\n    return mysqlConnection.promise().query(query, products).then(function (result) {\n      (0, _chai.expect)(result).to.not.be[\"null\"];\n    })[\"catch\"](function (err) {\n      (0, _chai.expect)(err).to.be[\"null\"];\n    });\n  });\n  it(\"Checking regression\", function () {\n    var query = \"SELECT * FROM products WHERE product_name REGEXP '[0-9]'\";\n    return mysqlConnection.promise().query(query)[\"catch\"](console.log).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          rows = _ref2[0],\n          fields = _ref2[1];\n\n      (0, _chai.expect)(rows.length).equal(0);\n    });\n  });\n});\ndescribe(\"Users\", function () {\n  var TOKEN = \"4e5a7688d35bd35d3a1748336915f162a78fd8ce2b39bcf74f07f3fe78c11feb\";\n  it(\"Status health check\", function () {\n    return request.get(\"users?access-token=\".concat(TOKEN)).then(function (res) {\n      (0, _chai.expect)(res.status).equal(200);\n    });\n  });\n  it(\"Verify not empty\", function () {\n    return request.get(\"users?access-token=\".concat(TOKEN)).then(function (res) {\n      (0, _chai.expect)(res.body.data).to.not.be.empty;\n    });\n  });\n  it(\"GET /users with query params\", function () {\n    var url = \"users?access-token=\".concat(TOKEN, \"&page=5&gender=Female&status=Active\");\n    return request.get(url).then(function (res) {\n      (0, _chai.expect)(res.body.data).to.not.be.empty;\n      res.body.data.forEach(function (data) {\n        (0, _chai.expect)(data.gender).to.eq(\"Female\");\n        (0, _chai.expect)(data.status).to.eq(\"Active\");\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1ZXN0IiwibXlzcWwiLCJyZXF1aXJlIiwibXlzcWxDb25uZWN0aW9uIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsImRlc2NyaWJlIiwiaXQiLCJwcm9kdWN0cyIsInByb2R1Y3RfbmFtZSIsInF1ZXJ5IiwicHJvbWlzZSIsInRoZW4iLCJyZXN1bHQiLCJ0byIsIm5vdCIsImJlIiwicm93cyIsImZpZWxkcyIsImxlbmd0aCIsImVxdWFsIiwiVE9LRU4iLCJnZXQiLCJyZXMiLCJzdGF0dXMiLCJib2R5IiwiZGF0YSIsImVtcHR5IiwidXJsIiwiZm9yRWFjaCIsImdlbmRlciIsImVxIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUdBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRkEsSUFBTUEsT0FBTyxHQUFHLDJCQUFVLGtDQUFWLENBQWhCOztBQUdBLElBQU1DLEtBQUssR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBckIsQyxDQUNBO0FBQ0E7QUFFQTtBQUVBOzs7QUFFQSxJQUFJQyxlQUFlLEdBQUdGLEtBQUssQ0FBQ0csZ0JBQU4sQ0FBdUI7QUFDM0NDLEVBQUFBLElBQUksRUFBRSxXQURxQztBQUUzQ0MsRUFBQUEsSUFBSSxFQUFFLE1BRnFDO0FBRzNDQyxFQUFBQSxRQUFRLEVBQUUsVUFIaUM7QUFJM0NDLEVBQUFBLFFBQVEsRUFBRSxTQUppQyxDQUszQztBQUNBOztBQU4yQyxDQUF2QixDQUF0QjtBQVNBTCxlQUFlLENBQUNNLE9BQWhCLENBQXdCLFVBQUNDLEdBQUQsRUFBUztBQUMvQixNQUFJLENBQUNBLEdBQUwsRUFBVTtBQUNSQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0QsR0FGRCxNQUVPO0FBQ0xELElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixrQkFB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SUQsS0FOTSxDQUFQO0FBT0QsR0FWQyxDQUFGO0FBV0QsQ0ExQk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMva2hhcHVoZXR0aS9EZXNrdG9wL3NxbFByb2plY3QvdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3VwZXJ0ZXN0IGZyb20gXCJzdXBlcnRlc3RcIjtcbmNvbnN0IHJlcXVlc3QgPSBzdXBlcnRlc3QoXCJodHRwczovL2dvcmVzdC5jby5pbi9wdWJsaWMtYXBpL1wiKTtcblxuaW1wb3J0IHsgZXhwZWN0IH0gZnJvbSBcImNoYWlcIjtcbmNvbnN0IG15c3FsID0gcmVxdWlyZShcIm15c3FsMlwiKTtcbi8vIGNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbi8vIGNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKFwiYm9keS1QYXJzZXJcIik7XG5cbi8vIHZhciBhcHAgPSBleHByZXNzKCk7XG5cbi8vIGFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG52YXIgbXlzcWxDb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG4gIGhvc3Q6IFwibG9jYWxob3N0XCIsXG4gIHVzZXI6IFwicm9vdFwiLFxuICBwYXNzd29yZDogXCJwYXNzd29yZFwiLFxuICBkYXRhYmFzZTogXCJrYXN1bmRiXCIsXG4gIC8vIHNvY2tldFBhdGg6IFwiL3RtcC9teXNxbC5zb2NrXCIsXG4gIC8vIG11bHRpcGxlU3RhdGVtZW50czogdHJ1ZSxcbn0pO1xuXG5teXNxbENvbm5lY3Rpb24uY29ubmVjdCgoZXJyKSA9PiB7XG4gIGlmICghZXJyKSB7XG4gICAgY29uc29sZS5sb2coXCJDb25uZWN0ZWRcIik7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coYGVycm9yOiAke0pTT04uc3RyaW5naWZ5KGVyciwgbnVsbCwgNCl9YCk7XG4gICAgY29uc29sZS5sb2coXCJDb25uZWN0aW9uIEZhaWxlZFwiKTtcbiAgfVxufSk7XG5cbi8vaW5zZXJ0IGEgcmVjb3JkXG5kZXNjcmliZShcIkRCIHRlc3RpbmdcIiwgKCkgPT4ge1xuICBpdChcIkluc2VydGluZyBhIHByb2R1Y3QgbmFtZVwiLCAoKSA9PiB7XG4gICAgbGV0IHByb2R1Y3RzID0geyBwcm9kdWN0X25hbWU6IFwiaXBhZGFpcnRoa2hmaDVcIiB9O1xuICAgIGxldCBxdWVyeSA9IFwiSU5TRVJUIElOVE8gcHJvZHVjdHMgU0VUID9cIjtcbiAgICByZXR1cm4gbXlzcWxDb25uZWN0aW9uXG4gICAgICAucHJvbWlzZSgpXG4gICAgICAucXVlcnkocXVlcnksIHByb2R1Y3RzKVxuICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICBleHBlY3QocmVzdWx0KS50by5ub3QuYmUubnVsbDtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBleHBlY3QoZXJyKS50by5iZS5udWxsO1xuICAgICAgfSk7XG4gIH0pO1xuICBpdChcIkNoZWNraW5nIHJlZ3Jlc3Npb25cIiwgKCkgPT4ge1xuICAgIGxldCBxdWVyeSA9IFwiU0VMRUNUICogRlJPTSBwcm9kdWN0cyBXSEVSRSBwcm9kdWN0X25hbWUgUkVHRVhQICdbMC05XSdcIjtcbiAgICByZXR1cm4gbXlzcWxDb25uZWN0aW9uXG4gICAgICAucHJvbWlzZSgpXG4gICAgICAucXVlcnkocXVlcnkpXG4gICAgICAuY2F0Y2goY29uc29sZS5sb2cpXG4gICAgICAudGhlbigoW3Jvd3MsIGZpZWxkc10pID0+IHtcbiAgICAgICAgZXhwZWN0KHJvd3MubGVuZ3RoKS5lcXVhbCgwKTtcbiAgICAgIH0pO1xuICB9KTtcbn0pO1xuXG5kZXNjcmliZShcIlVzZXJzXCIsICgpID0+IHtcbiAgY29uc3QgVE9LRU4gPVxuICAgIFwiNGU1YTc2ODhkMzViZDM1ZDNhMTc0ODMzNjkxNWYxNjJhNzhmZDhjZTJiMzliY2Y3NGYwN2YzZmU3OGMxMWZlYlwiO1xuICBpdChcIlN0YXR1cyBoZWFsdGggY2hlY2tcIiwgKCkgPT4ge1xuICAgIHJldHVybiByZXF1ZXN0LmdldChgdXNlcnM/YWNjZXNzLXRva2VuPSR7VE9LRU59YCkudGhlbigocmVzKSA9PiB7XG4gICAgICBleHBlY3QocmVzLnN0YXR1cykuZXF1YWwoMjAwKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgaXQoXCJWZXJpZnkgbm90IGVtcHR5XCIsICgpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoYHVzZXJzP2FjY2Vzcy10b2tlbj0ke1RPS0VOfWApLnRoZW4oKHJlcykgPT4ge1xuICAgICAgZXhwZWN0KHJlcy5ib2R5LmRhdGEpLnRvLm5vdC5iZS5lbXB0eTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgaXQoXCJHRVQgL3VzZXJzIHdpdGggcXVlcnkgcGFyYW1zXCIsICgpID0+IHtcbiAgICBjb25zdCB1cmwgPSBgdXNlcnM/YWNjZXNzLXRva2VuPSR7VE9LRU59JnBhZ2U9NSZnZW5kZXI9RmVtYWxlJnN0YXR1cz1BY3RpdmVgO1xuXG4gICAgcmV0dXJuIHJlcXVlc3QuZ2V0KHVybCkudGhlbigocmVzKSA9PiB7XG4gICAgICBleHBlY3QocmVzLmJvZHkuZGF0YSkudG8ubm90LmJlLmVtcHR5O1xuICAgICAgcmVzLmJvZHkuZGF0YS5mb3JFYWNoKChkYXRhKSA9PiB7XG4gICAgICAgIGV4cGVjdChkYXRhLmdlbmRlcikudG8uZXEoXCJGZW1hbGVcIik7XG4gICAgICAgIGV4cGVjdChkYXRhLnN0YXR1cykudG8uZXEoXCJBY3RpdmVcIik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "request",
        "mysql",
        "require",
        "mysqlConnection",
        "createConnection",
        "host",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log",
        "JSON",
        "stringify",
        "describe",
        "it",
        "products",
        "product_name",
        "query",
        "promise",
        "then",
        "result",
        "to",
        "not",
        "be",
        "rows",
        "fields",
        "length",
        "equal",
        "TOKEN",
        "get",
        "res",
        "status",
        "body",
        "data",
        "empty",
        "url",
        "forEach",
        "gender",
        "eq"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/khapuhetti/Desktop/sqlProject/test/",
      "sourcesContent": [
        "import supertest from \"supertest\";\nconst request = supertest(\"https://gorest.co.in/public-api/\");\n\nimport { expect } from \"chai\";\nconst mysql = require(\"mysql2\");\n// const express = require(\"express\");\n// const bodyParser = require(\"body-Parser\");\n\n// var app = express();\n\n// app.use(bodyParser.json());\n\nvar mysqlConnection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"password\",\n  database: \"kasundb\",\n  // socketPath: \"/tmp/mysql.sock\",\n  // multipleStatements: true,\n});\n\nmysqlConnection.connect((err) => {\n  if (!err) {\n    console.log(\"Connected\");\n  } else {\n    console.log(`error: ${JSON.stringify(err, null, 4)}`);\n    console.log(\"Connection Failed\");\n  }\n});\n\n//insert a record\ndescribe(\"DB testing\", () => {\n  it(\"Inserting a product name\", () => {\n    let products = { product_name: \"ipadairthkhfh5\" };\n    let query = \"INSERT INTO products SET ?\";\n    return mysqlConnection\n      .promise()\n      .query(query, products)\n      .then((result) => {\n        expect(result).to.not.be.null;\n      })\n      .catch((err) => {\n        expect(err).to.be.null;\n      });\n  });\n  it(\"Checking regression\", () => {\n    let query = \"SELECT * FROM products WHERE product_name REGEXP '[0-9]'\";\n    return mysqlConnection\n      .promise()\n      .query(query)\n      .catch(console.log)\n      .then(([rows, fields]) => {\n        expect(rows.length).equal(0);\n      });\n  });\n});\n\ndescribe(\"Users\", () => {\n  const TOKEN =\n    \"4e5a7688d35bd35d3a1748336915f162a78fd8ce2b39bcf74f07f3fe78c11feb\";\n  it(\"Status health check\", () => {\n    return request.get(`users?access-token=${TOKEN}`).then((res) => {\n      expect(res.status).equal(200);\n    });\n  });\n\n  it(\"Verify not empty\", () => {\n    return request.get(`users?access-token=${TOKEN}`).then((res) => {\n      expect(res.body.data).to.not.be.empty;\n    });\n  });\n\n  it(\"GET /users with query params\", () => {\n    const url = `users?access-token=${TOKEN}&page=5&gender=Female&status=Active`;\n\n    return request.get(url).then((res) => {\n      expect(res.body.data).to.not.be.empty;\n      res.body.data.forEach((data) => {\n        expect(data.gender).to.eq(\"Female\");\n        expect(data.status).to.eq(\"Active\");\n      });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622576804666
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/khapuhetti/Desktop/sqlProject/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/khapuhetti/Desktop/sqlProject\",\"filename\":\"/Users/khapuhetti/Desktop/sqlProject/test/assignment.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/khapuhetti/Desktop/sqlProject\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/khapuhetti/Desktop/sqlProject/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/khapuhetti/Desktop/sqlProject",
      "filename": "/Users/khapuhetti/Desktop/sqlProject/test/assignment.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/khapuhetti/Desktop/sqlProject",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/khapuhetti/Desktop/sqlProject/test/assignment.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/khapuhetti/Desktop/sqlProject/test/assignment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/khapuhetti/Desktop/sqlProject/test/",
        "sourceFileName": "assignment.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _supertest = _interopRequireDefault(require(\"supertest\"));\n\nvar _chai = require(\"chai\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar request = (0, _supertest[\"default\"])(\"https://gorest.co.in/public-api/\");\n\nvar mysql = require(\"mysql2\");\n\nvar mysqlConnection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"password\",\n  database: \"kasundb\"\n});\nmysqlConnection.connect(function (err) {\n  if (!err) {\n    console.log(\"Connected\");\n  } else {\n    console.log(\"error: \".concat(JSON.stringify(err, null, 4)));\n    console.log(\"Connection Failed\");\n  }\n}); //insert a record\n\ndescribe(\"DB testing\", function () {\n  it(\"Inserting a product name\", function () {\n    var products = {\n      product_name: \"kasuntestten\"\n    };\n    var query = \"INSERT INTO products SET ?\";\n    return mysqlConnection.promise().query(query, products).then(function (result) {\n      (0, _chai.expect)(result).to.not.be[\"null\"];\n    })[\"catch\"](function (err) {\n      (0, _chai.expect)(err).to.be[\"null\"];\n    });\n  });\n  it(\"Checking regression\", function () {\n    var query = \"SELECT * FROM products WHERE product_name REGEXP '[0-9]'\";\n    return mysqlConnection.promise().query(query)[\"catch\"](console.log).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          rows = _ref2[0],\n          fields = _ref2[1];\n\n      (0, _chai.expect)(rows.length).equal(0);\n    });\n  });\n});\ndescribe(\"Users\", function () {\n  var TOKEN = \"4e5a7688d35bd35d3a1748336915f162a78fd8ce2b39bcf74f07f3fe78c11feb\";\n  it(\"Status health check\", function () {\n    return request.get(\"users?access-token=\".concat(TOKEN)).then(function (res) {\n      (0, _chai.expect)(res.status).equal(200);\n    });\n  });\n  it(\"Verify not empty\", function () {\n    return request.get(\"users?access-token=\".concat(TOKEN)).then(function (res) {\n      (0, _chai.expect)(res.body.data).to.not.be.empty;\n    });\n  });\n  it(\"GET /users with query params\", function () {\n    var url = \"users?access-token=\".concat(TOKEN, \"&page=5&gender=Female&status=Active\");\n    return request.get(url).then(function (res) {\n      (0, _chai.expect)(res.body.data).to.not.be.empty;\n      res.body.data.forEach(function (data) {\n        (0, _chai.expect)(data.gender).to.eq(\"Female\");\n        (0, _chai.expect)(data.status).to.eq(\"Active\");\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2lnbm1lbnQuanMiXSwibmFtZXMiOlsicmVxdWVzdCIsIm15c3FsIiwicmVxdWlyZSIsIm15c3FsQ29ubmVjdGlvbiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJjb25uZWN0IiwiZXJyIiwiY29uc29sZSIsImxvZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJkZXNjcmliZSIsIml0IiwicHJvZHVjdHMiLCJwcm9kdWN0X25hbWUiLCJxdWVyeSIsInByb21pc2UiLCJ0aGVuIiwicmVzdWx0IiwidG8iLCJub3QiLCJiZSIsInJvd3MiLCJmaWVsZHMiLCJsZW5ndGgiLCJlcXVhbCIsIlRPS0VOIiwiZ2V0IiwicmVzIiwic3RhdHVzIiwiYm9keSIsImRhdGEiLCJlbXB0eSIsInVybCIsImZvckVhY2giLCJnZW5kZXIiLCJlcSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7OztBQUZBLElBQU1BLE9BQU8sR0FBRywyQkFBVSxrQ0FBVixDQUFoQjs7QUFHQSxJQUFNQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUVBLElBQU1DLGVBQWUsR0FBR0YsS0FBSyxDQUFDRyxnQkFBTixDQUF1QjtBQUM3Q0MsRUFBQUEsSUFBSSxFQUFFLFdBRHVDO0FBRTdDQyxFQUFBQSxJQUFJLEVBQUUsTUFGdUM7QUFHN0NDLEVBQUFBLFFBQVEsRUFBRSxVQUhtQztBQUk3Q0MsRUFBQUEsUUFBUSxFQUFFO0FBSm1DLENBQXZCLENBQXhCO0FBT0FMLGVBQWUsQ0FBQ00sT0FBaEIsQ0FBd0IsVUFBQ0MsR0FBRCxFQUFTO0FBQy9CLE1BQUksQ0FBQ0EsR0FBTCxFQUFVO0FBQ1JDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFDRCxHQUZELE1BRU87QUFDTEQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLGtCQUFzQkMsSUFBSSxDQUFDQyxTQUFMLENBQWVKLEdBQWYsRUFBb0Is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TyxDQUFSIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9raGFwdWhldHRpL0Rlc2t0b3Avc3FsUHJvamVjdC90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdXBlcnRlc3QgZnJvbSBcInN1cGVydGVzdFwiO1xuY29uc3QgcmVxdWVzdCA9IHN1cGVydGVzdChcImh0dHBzOi8vZ29yZXN0LmNvLmluL3B1YmxpYy1hcGkvXCIpO1xuXG5pbXBvcnQgeyBleHBlY3QgfSBmcm9tIFwiY2hhaVwiO1xuY29uc3QgbXlzcWwgPSByZXF1aXJlKFwibXlzcWwyXCIpO1xuXG5jb25zdCBteXNxbENvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcbiAgaG9zdDogXCJsb2NhbGhvc3RcIixcbiAgdXNlcjogXCJyb290XCIsXG4gIHBhc3N3b3JkOiBcInBhc3N3b3JkXCIsXG4gIGRhdGFiYXNlOiBcImthc3VuZGJcIixcbn0pO1xuXG5teXNxbENvbm5lY3Rpb24uY29ubmVjdCgoZXJyKSA9PiB7XG4gIGlmICghZXJyKSB7XG4gICAgY29uc29sZS5sb2coXCJDb25uZWN0ZWRcIik7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coYGVycm9yOiAke0pTT04uc3RyaW5naWZ5KGVyciwgbnVsbCwgNCl9YCk7XG4gICAgY29uc29sZS5sb2coXCJDb25uZWN0aW9uIEZhaWxlZFwiKTtcbiAgfVxufSk7XG5cbi8vaW5zZXJ0IGEgcmVjb3JkXG5kZXNjcmliZShcIkRCIHRlc3RpbmdcIiwgKCkgPT4ge1xuICBpdChcIkluc2VydGluZyBhIHByb2R1Y3QgbmFtZVwiLCAoKSA9PiB7XG4gICAgbGV0IHByb2R1Y3RzID0geyBwcm9kdWN0X25hbWU6IFwia2FzdW50ZXN0dGVuXCIgfTtcbiAgICBsZXQgcXVlcnkgPSBcIklOU0VSVCBJTlRPIHByb2R1Y3RzIFNFVCA/XCI7XG4gICAgcmV0dXJuIG15c3FsQ29ubmVjdGlvblxuICAgICAgLnByb21pc2UoKVxuICAgICAgLnF1ZXJ5KHF1ZXJ5LCBwcm9kdWN0cylcbiAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgZXhwZWN0KHJlc3VsdCkudG8ubm90LmJlLm51bGw7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgZXhwZWN0KGVycikudG8uYmUubnVsbDtcbiAgICAgIH0pO1xuICB9KTtcbiAgaXQoXCJDaGVja2luZyByZWdyZXNzaW9uXCIsICgpID0+IHtcbiAgICBsZXQgcXVlcnkgPSBcIlNFTEVDVCAqIEZST00gcHJvZHVjdHMgV0hFUkUgcHJvZHVjdF9uYW1lIFJFR0VYUCAnWzAtOV0nXCI7XG4gICAgcmV0dXJuIG15c3FsQ29ubmVjdGlvblxuICAgICAgLnByb21pc2UoKVxuICAgICAgLnF1ZXJ5KHF1ZXJ5KVxuICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKVxuICAgICAgLnRoZW4oKFtyb3dzLCBmaWVsZHNdKSA9PiB7XG4gICAgICAgIGV4cGVjdChyb3dzLmxlbmd0aCkuZXF1YWwoMCk7XG4gICAgICB9KTtcbiAgfSk7XG59KTtcblxuZGVzY3JpYmUoXCJVc2Vyc1wiLCAoKSA9PiB7XG4gIGNvbnN0IFRPS0VOID1cbiAgICBcIjRlNWE3Njg4ZDM1YmQzNWQzYTE3NDgzMzY5MTVmMTYyYTc4ZmQ4Y2UyYjM5YmNmNzRmMDdmM2ZlNzhjMTFmZWJcIjtcbiAgaXQoXCJTdGF0dXMgaGVhbHRoIGNoZWNrXCIsICgpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoYHVzZXJzP2FjY2Vzcy10b2tlbj0ke1RPS0VOfWApLnRoZW4oKHJlcykgPT4ge1xuICAgICAgZXhwZWN0KHJlcy5zdGF0dXMpLmVxdWFsKDIwMCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0KFwiVmVyaWZ5IG5vdCBlbXB0eVwiLCAoKSA9PiB7XG4gICAgcmV0dXJuIHJlcXVlc3QuZ2V0KGB1c2Vycz9hY2Nlc3MtdG9rZW49JHtUT0tFTn1gKS50aGVuKChyZXMpID0+IHtcbiAgICAgIGV4cGVjdChyZXMuYm9keS5kYXRhKS50by5ub3QuYmUuZW1wdHk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0KFwiR0VUIC91c2VycyB3aXRoIHF1ZXJ5IHBhcmFtc1wiLCAoKSA9PiB7XG4gICAgY29uc3QgdXJsID0gYHVzZXJzP2FjY2Vzcy10b2tlbj0ke1RPS0VOfSZwYWdlPTUmZ2VuZGVyPUZlbWFsZSZzdGF0dXM9QWN0aXZlYDtcblxuICAgIHJldHVybiByZXF1ZXN0LmdldCh1cmwpLnRoZW4oKHJlcykgPT4ge1xuICAgICAgZXhwZWN0KHJlcy5ib2R5LmRhdGEpLnRvLm5vdC5iZS5lbXB0eTtcbiAgICAgIHJlcy5ib2R5LmRhdGEuZm9yRWFjaCgoZGF0YSkgPT4ge1xuICAgICAgICBleHBlY3QoZGF0YS5nZW5kZXIpLnRvLmVxKFwiRmVtYWxlXCIpO1xuICAgICAgICBleHBlY3QoZGF0YS5zdGF0dXMpLnRvLmVxKFwiQWN0aXZlXCIpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "assignment.js"
      ],
      "names": [
        "request",
        "mysql",
        "require",
        "mysqlConnection",
        "createConnection",
        "host",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log",
        "JSON",
        "stringify",
        "describe",
        "it",
        "products",
        "product_name",
        "query",
        "promise",
        "then",
        "result",
        "to",
        "not",
        "be",
        "rows",
        "fields",
        "length",
        "equal",
        "TOKEN",
        "get",
        "res",
        "status",
        "body",
        "data",
        "empty",
        "url",
        "forEach",
        "gender",
        "eq"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/khapuhetti/Desktop/sqlProject/test/",
      "sourcesContent": [
        "import supertest from \"supertest\";\nconst request = supertest(\"https://gorest.co.in/public-api/\");\n\nimport { expect } from \"chai\";\nconst mysql = require(\"mysql2\");\n\nconst mysqlConnection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"password\",\n  database: \"kasundb\",\n});\n\nmysqlConnection.connect((err) => {\n  if (!err) {\n    console.log(\"Connected\");\n  } else {\n    console.log(`error: ${JSON.stringify(err, null, 4)}`);\n    console.log(\"Connection Failed\");\n  }\n});\n\n//insert a record\ndescribe(\"DB testing\", () => {\n  it(\"Inserting a product name\", () => {\n    let products = { product_name: \"kasuntestten\" };\n    let query = \"INSERT INTO products SET ?\";\n    return mysqlConnection\n      .promise()\n      .query(query, products)\n      .then((result) => {\n        expect(result).to.not.be.null;\n      })\n      .catch((err) => {\n        expect(err).to.be.null;\n      });\n  });\n  it(\"Checking regression\", () => {\n    let query = \"SELECT * FROM products WHERE product_name REGEXP '[0-9]'\";\n    return mysqlConnection\n      .promise()\n      .query(query)\n      .catch(console.log)\n      .then(([rows, fields]) => {\n        expect(rows.length).equal(0);\n      });\n  });\n});\n\ndescribe(\"Users\", () => {\n  const TOKEN =\n    \"4e5a7688d35bd35d3a1748336915f162a78fd8ce2b39bcf74f07f3fe78c11feb\";\n  it(\"Status health check\", () => {\n    return request.get(`users?access-token=${TOKEN}`).then((res) => {\n      expect(res.status).equal(200);\n    });\n  });\n\n  it(\"Verify not empty\", () => {\n    return request.get(`users?access-token=${TOKEN}`).then((res) => {\n      expect(res.body.data).to.not.be.empty;\n    });\n  });\n\n  it(\"GET /users with query params\", () => {\n    const url = `users?access-token=${TOKEN}&page=5&gender=Female&status=Active`;\n\n    return request.get(url).then((res) => {\n      expect(res.body.data).to.not.be.empty;\n      res.body.data.forEach((data) => {\n        expect(data.gender).to.eq(\"Female\");\n        expect(data.status).to.eq(\"Active\");\n      });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622583135881
  }
}